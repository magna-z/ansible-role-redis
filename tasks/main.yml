---
- name: check mandatory variables
  ansible.builtin.assert:
    that:
      - redis_config is defined
    quiet: true

- name: ensure group
  ansible.builtin.group:
    name: redis
    system: true
  register: _redis_group

- name: ensure user
  ansible.builtin.user:
    name: redis
    group: redis
    shell: /sbin/nologin
    home: /var/lib/redis
    create_home: false
    system: true
  register: _redis_user

- name: ensure work directories
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    owner: "{{ _redis_user.uid }}"
    group: "{{ _redis_group.gid }}"
    mode: "0750"
  with_items: [/etc/redis, /var/lib/redis]

- name: ensure config
  ansible.builtin.copy:
    content: "{{ redis_config }}"
    dest: /etc/redis/server.conf
    owner: "{{ _redis_user.uid }}"
    group: "{{ _redis_group.gid }}"
    mode: "0640"

- name: ensure systemd redis.service
  notify: restart service redis
  ansible.builtin.copy:
    dest: /etc/systemd/system/redis.service
    mode: "0644"
    content: |
      [Unit]
      Requires=docker.service
      After=docker.service
      StartLimitIntervalSec=0
      [Service]
      ExecStartPre=-/usr/bin/docker rm --force %N
      ExecStart=/usr/bin/docker run \
        --name=%N \
        --rm=true \
        --pid=host \
        --network=host \
        --stop-timeout=300 \
        --workdir=/var/lib/redis \
        --user={{ _redis_user.uid }}:{{ _redis_group.gid }} \
        --volume=/etc/localtime:/etc/localtime:ro \
        --volume=/etc/timezone:/etc/timezone:ro \
        --volume=/etc/redis:/etc/redis:rw \
        --volume=/var/lib/redis:/var/lib/redis:rw \
        --entrypoint=redis-server \
        {{ redis_docker_image }} /etc/redis/server.conf \
          --daemonize no \
          --port 6379 \
          --bind *
      ExecStop=/usr/bin/docker stop %N
      Restart=always
      RestartSec=10
      KillMode=process
      [Install]
      WantedBy=multi-user.target

- name: execute handlers
  meta: flush_handlers

- name: start service redis
  ansible.builtin.systemd:
    name: redis
    daemon_reload: true
    enabled: true
    state: started

- name: wait redis
  ansible.builtin.wait_for:
    host: localhost
    port: 6379
    timeout: 60
  retries: 5
